# Copyright (C) 2022 Huawei Technologies Co., Ltd.
# Licensed under the Mulan PSL v2.
# You can use this software according to the terms and conditions of the Mulan PSL v2.
# You may obtain a copy of Mulan PSL v2 at:
#     http://license.coscl.org.cn/MulanPSL2
# THIS SOFTWARE IS PROVIDED ON AN "AS IS" BASIS, WITHOUT WARRANTIES OF ANY KIND, EITHER EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO NON-INFRINGEMENT, MERCHANTABILITY OR FIT FOR A PARTICULAR
# PURPOSE.
# See the Mulan PSL v2 for more details.

import("//base/tee/tee_client/tee_client.gni")
import("//build/ohos.gni")
import("//build/ohos_var.gni")

ohos_shared_library("libcadaemon") {
  part_name = "tee_client"
  subsystem_name = "tee"
  defines = []

  sources = [
    "../../../../frameworks/libteec_vendor/load_sec_file.c",
    "../../../../frameworks/libteec_vendor/tee_client_api.c",
    "../../../../frameworks/libteec_vendor/tee_client_app_load.c",
    "../../../authentication/tcu_authentication.c",
    "../../../authentication/tee_auth_common.c",
    "../../../authentication/tee_auth_system.cpp",
    "../../../authentication/tee_get_native_cert.c",
    "../../src/ca_daemon/cadaemon_service.cpp",
    "../../src/ca_daemon/cadaemon_stub.cpp",
  ]

  include_dirs = [
    "../../../../interfaces/kits/c/include",
    "../../../../frameworks/include/",
    "../../../../frameworks/include/standard/",
    "../../../../frameworks/include/standard/teec_system",
    "../../../../frameworks/libteec_vendor/",
    "../../../authentication",
    "../../src/ca_daemon",
  ]

  if (tee_client_features_tui) {
    deps = [ "../standard:libcadaemon_tui" ]
  }

  external_deps = [
    "access_token:libaccesstoken_sdk",
    "bounds_checking_function:libsec_shared",
    "c_utils:utils",
    "hilog:libhilog",
    "ipc:ipc_core",
    "openssl:libcrypto_shared",
    "safwk:system_ability_fwk",
    "samgr:samgr_proxy",
  ]
}

declare_args() {
  hash_string = ""
}
ohos_shared_library("libcadaemon_tui") {
  part_name = "tee_client"
  subsystem_name = "tee"
  output_extension = "so"
  defines = []

  # hash_string = exec_script(ttf_calc_hash_script, [], "string")
  hash_string =
      "2deabf97eaf17958dc24746b922779d9913008526daf1c853903547505a8f9ca"

  # md5sum ttf_calc_hash_script
  # print("get hash_string :" + hash_string + " and file path :" + ttf_calc_hash_script)
  if (hash_string != "") {
    defines += [ "FONT_HASH_VAL=\"$hash_string\"" ]
  } else {
    defines += [ "FONT_HASH_VAL=\"hash_string can not be set\"" ]
  }

  sources = [
    "../../src/tui_daemon/tee_tui_daemon.cpp",
    "../../src/tui_daemon/tui_event.cpp",
  ]

  include_dirs = [
    "../../../../interfaces/kits/c/include",
    "../../../../frameworks/include/",
    "../../../../frameworks/include/standard/",
    "../../../../frameworks/include/standard/teec_system",
    "../../../../frameworks/libteec_vendor/",
    "../../../authentication",
    "../../src/ca_daemon",
    "../../src/tui_daemon",
  ]

  external_deps = [
    "ability_base:want",
    "bounds_checking_function:libsec_shared",
    "c_utils:utils",
    "call_manager:tel_call_manager_api",
    "hilog:libhilog",
    "image_framework:image_native",
    "ipc:ipc_core",
    "power_manager:powermgr_client",
    "safwk:system_ability_fwk",
    "samgr:samgr_proxy",
    "window_manager:libdm",
  ]

  ldflags = [
    "-Wl,-z,max-page-size=4096",
    "-Wl,-z,separate-code",
  ]
}

# Copyright (C) 2022 Huawei Technologies Co., Ltd.
# Licensed under the Mulan PSL v2.
# You can use this software according to the terms and conditions of the Mulan PSL v2.
# You may obtain a copy of Mulan PSL v2 at:
#     http://license.coscl.org.cn/MulanPSL2
# THIS SOFTWARE IS PROVIDED ON AN "AS IS" BASIS, WITHOUT WARRANTIES OF ANY KIND, EITHER EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO NON-INFRINGEMENT, MERCHANTABILITY OR FIT FOR A PARTICULAR
# PURPOSE.
# See the Mulan PSL v2 for more details.
include flags_SL.mk

# common flags
COMMON_INCLUDES := ${CURDIR}/../../interfaces/inner_api \
				   ${CURDIR}/../../frameworks/include/standard/teec_vendor \
				   ${CURDIR}/../../frameworks/include/standard \
				   ${CURDIR}/../../frameworks/include \
				   ${CURDIR}/../../frameworks/libteec_vendor \
				   ${CURDIR}/../../services/teecd/include/standard \
				   ${CURDIR}/../../services/teecd/include \
				   ${CURDIR}/../../services/authentication \
				   ${CURDIR}/../../services/taversion_ctrl \
				   $(CURDIR)/../../../../../base/hiviewdfx/hilog_lite/interfaces/native/innerkits/hilog \
				   $(OSDRV_DIR)/components/secure_c/include


COMMON_CFLAGS := $(addprefix -I, $(COMMON_INCLUDES)) $(CFLAGS) -D_GNU_SOURCE \
				 -DTEE_LOG_PATH_BASE=\"/data/vendor/log\" -DTEE_LOG_SUBFOLDER=\"hisi_logs/tee\" -DLIB_TEEC_VENDOR

S_CFLAGS := -Wextra -fstack-protector-all -s -Wl,-z,relro,-z,now,-z,noexecstack \
			-fPIE -D_FORTIFY_SOURCE=2 -O2

TARGET_LIB := libteec.so

LIBTEEC_OUT_DIR := $(CURDIR)/out/libteec

TEEC_SRCS := frameworks/libteec_vendor/tee_client_api.c \
			 frameworks/libteec_vendor/tee_client_app_load.c \
			 frameworks/libteec_vendor/tee_client_socket.c \
			 frameworks/libteec_vendor/load_sec_file.c \
			 frameworks/tee_file/tee_file.c

TEEC_SRC_DIR := ${CURDIR}/../../
TEEC_OBJ_DIR := $(LIBTEEC_OUT_DIR)

TEEC_OBJS := $(patsubst %.c,$(TEEC_OBJ_DIR)/%.o, $(TEEC_SRCS))
TEEC_CFLAGS := -lpthread
TEEC_CFLAGS += -DCONFIG_AGENT_FS -DCONFIG_SMART_LOCK_PLATFORM -DCONFIG_LOG_NO_PUBLIC
TEEC_LIBRARY_LDFLAGS := -lhilog_shared -lsec_shared
TEEC_LIBRARY_LDFLAGS += -L$(OUTDIR)

# compile teecd
TARGET_APP := teecd
TEECD_OUT_DIR := $(CURDIR)/out/teecd

TEECD_SRCS := services/teecd/src/tee_agent.c \
			  services/teecd/src/tee_ca_daemon.c \
			  services/teecd/src/misc_work_agent.c \
			  services/teecd/src/fs_work_agent.c \
			  services/teecd/src/secfile_load_agent.c \
			  services/teecd/src/tee_load_dynamic.c \
			  services/teecd/src/tee_ca_auth.c \
			  services/authentication/tee_get_native_cert.c \
			  services/authentication/tcu_authentication.c \
			  services/authentication/tee_auth_common.c \
			  services/taversion_ctrl/tee_ta_version_ctrl.c \
			  frameworks/tee_file/tee_file.c

TEECD_SRC_DIR := ${CURDIR}/../../
TEECD_OBJ_DIR := $(TEECD_OUT_DIR)
TEECD_OBJS := $(patsubst %.c,$(TEECD_OBJ_DIR)/%.o,$(TEECD_SRCS))

TEECD_CFLAGS += -D_GNU_SOURCE
TEECD_CFLAGS += -DCONFIG_AGENT_FS -DCONFIG_SMART_LOCK_PLATFORM -DCONFIG_BACKUP_PARTITION -DCONFIG_LOG_NO_PUBLIC
TEECD_CFLAGS += -DDYNAMIC_DRV_DIR=\"/vendor/bin/tee_dynamic_drv/\"
TEECD_CFLAGS += -DDYNAMIC_CRYPTO_DRV_DIR=\"/vendor/bin/tee_dynamic_drv/crypto/\"
TEECD_CFLAGS += -DDYNAMIC_SRV_DIR=\"/vendor/bin/tee_dynamic_srv/\"
TEECD_CFLAGS += -DDYNAMIC_SRV_DIR_LOAD_LATE
TEECD_CFLAGS += -DTEE_LOAD_FROM_ROOTFS

TEECD_FILE := $(TEECD_OUT_DIR)/$(TARGET_APP)
TEECD_LDFLAGS := -L$(TEECD_OUT_DIR)/../../libteec
TEECD_LDFLAGS += -lpthread
TEECD_LDFLAGS += -lrt
TEECD_LDFLAGS += -lhilog_shared -lsec_shared
TEECD_LDFLAGS += -L$(OUTDIR)

# compile tlogcat
TARGET_TLOGCAT := tlogcat
TLOGCAT_OUT_DIR := $(CURDIR)/out/tlogcat/
TLOGCAT_FILES := services/tlogcat/src/tlogcat.c \
				 services/tlogcat/src/sys_hilog_cfg.c \
				 frameworks/tee_file/tee_file.c

TLOGCAT_SRC_DIR := ${CURDIR}/../../
TLOGCAT_OBJ_DIR := $(TLOGCAT_OUT_DIR)
TLOGCAT_OBJS := $(patsubst %.c,$(TLOGCAT_OBJ_DIR)/%.o, $(TLOGCAT_FILES))
TLOGCAT_FILE := $(TLOGCAT_OUT_DIR)/$(TARGET_TLOGCAT)

TLOGCAT_CFLAGS += -DCONFIG_SMART_LOCK_PLATFORM -DCONFIG_LOG_NO_PUBLIC
TLOGCAT_CFLAGS += -DTLOGCAT_SYS_LOG
TLOGCAT_CFLAGS += -DLOG_PATH_TEE=\"/var/log/tee/\"
TLOGCAT_CFLAGS += -DLOG_PATH_BASE=\"/var/log/\"
TLOGCAT_CFLAGS += -DLOG_TMPPATH_TEE=\"/var/log/tee/_tmp/\"
TLOGCAT_CFLAGS += -DAID_SYSTEM=0
TLOGCAT_CFLAGS += -lrt
TLOGCAT_CFLAGS += -I$(CURDIR)/../../services/tlogcat/include

TLOGCAT_LDFLAGS += -lhilog_shared -lsec_shared
TLOGCAT_LDFLAGS += -L$(OUTDIR)

# compile libsecurec.aarch64.a
LIBC_OUT_DIR := $(CURDIR)/out/libsecurec
LIBC_SEC := $(LIBC_OUT_DIR)/libsecurec.aarch64.a

LIBC_FILE := \
		vsprintf_s.c \
		wmemmove_s.c \
		strncat_s.c \
		vsnprintf_s.c \
		fwscanf_s.c \
		scanf_s.c	\
		strcat_s.c	\
		sscanf_s.c	\
		secureprintoutput_w.c	\
		wmemcpy_s.c	\
		wcsncat_s.c	\
		secureprintoutput_a.c	\
		secureinput_w.c	\
		memcpy_s.c	\
		fscanf_s.c	\
		vswscanf_s.c	\
		secureinput_a.c	\
		sprintf_s.c	\
		memmove_s.c	\
		swscanf_s.c	\
		snprintf_s.c	\
		vscanf_s.c	\
		vswprintf_s.c	\
		wcscpy_s.c	\
		vfwscanf_s.c	\
		memset_s.c	\
		wscanf_s.c	\
		vwscanf_s.c	\
		strtok_s.c	\
		wcsncpy_s.c	\
		vfscanf_s.c	\
		vsscanf_s.c	\
		wcstok_s.c	\
		securecutil.c	\
		gets_s.c	\
		swprintf_s.c	\
		strcpy_s.c	\
		wcscat_s.c	\
		strncpy_s.c

LIBC_SRC_DIR := $(OSDRV_DIR)/components/secure_c/src
LIBC_OBJ_DIR:= $(LIBC_OUT_DIR)

LIBC_OBJS := $(patsubst %.c, $(LIBC_OBJ_DIR)/%.o, $(LIBC_FILE))

LIBC_INCLUDES := -I${LIBC_SRC_DIR}/../include

LIBC_CFLAGS += -D_GNU_SOURCE
LIBC_LIBRARY := $(LIBC_OUT_DIR)/libsecurec.aarch64.a

LIBC_LDFLAGS += -lpthread
LIBC_LDFLAGS += -lrt

$(LIBC_SEC): $(LIBC_OBJS)
	@echo " AR $@"
	$(VPREFIX)$(AR) rcs $@ $^

$(LIBC_OBJ_DIR)/%.o: $(LIBC_SRC_DIR)/%.c
	$(VPREFIX)mkdir -p $(dir $@)
	@echo " CC $<"
	$(VPREFIX)$(CC) $(S_CFLAGS) $(LIBC_INCLUDES) $(LIBC_LDFLAGS) -c $< -o $@

.PHONY: all clean

all: $(LIBC_SEC) $(TARGET_LIB) $(TARGET_APP) $(TARGET_TLOGCAT)
$(TARGET_APP): $(LIBC_SEC)
$(TARGET_TLOGCAT): $(LIBC_SEC)

clean: out_clean

$(TARGET_LIB): $(TEEC_OBJS)
		@echo "  LINK	$@"
		$(VPREFIX)$(CC) $(S_CFLAGS) -shared $(TEEC_CFLAGS) -o $@ $+ $(TEEC_LIBRARY_LDFLAGS)
		mv $(CURDIR)/$(TARGET_LIB) $(LIBTEEC_OUT_DIR)
		@echo ""

$(LIBTEEC_OUT_DIR)/libteec.a: $(TEEC_OBJS)
		@echo "  AR		$@"
		$(VPREFIX)$(AR) rcs $@ $+

$(TEEC_OBJ_DIR)/%.o: ${TEEC_SRC_DIR}/%.c
	$(VPREFIX)mkdir -p $(dir $@)
	@echo "  CC		$<"
	$(VPREFIX)$(CC) $(S_CFLAGS) $(COMMON_CFLAGS) $(TEEC_CFLAGS) -c $< -o $@

$(TARGET_APP):$(TEECD_FILE)

$(TEECD_FILE):$(TEECD_OBJS)
	@echo " LINK $@"
	$(VPREFIX)$(CC) $(S_CFLAGS) $(TEECD_CFLAGS) -o $@ $+ $(TEECD_LDFLAGS)

$(TEECD_OBJ_DIR)/%.o: $(TEECD_SRC_DIR)/%.c
	$(VPREFIX)mkdir -p $(dir $@)
	@echo " CC $<"
	$(VPREFIX)$(CC) $(S_CFLAGS) $(COMMON_CFLAGS) $(COMMON_INCLUDES) $(TEECD_CFLAGS) -c $< -o $@ $(TEECD_LDFLAGS)

# make tlogcat
$(TARGET_TLOGCAT): $(TLOGCAT_FILE)

$(TLOGCAT_FILE): $(TLOGCAT_OBJS)
		@echo "		LINK	$@"
		$(VPREFIX)$(CC) $(S_CFLAGS) $(TLOGCAT_CFLAGS) -o $@ $+ $(TLOGCAT_LDFLAGS)

$(TLOGCAT_OBJ_DIR)/%.o: $(TLOGCAT_SRC_DIR)/%.c
		$(VPREFIX)mkdir -p $(dir $@)
		@echo "  CC		$<"
		$(VPREFIX)$(CC) $(S_CFLAGS) $(COMMON_CFLAGS) $(COMMON_INCLUDES) $(TLOGCAT_CFLAGS) -c $< -o $@ $(TLOGCAT_LDFLAGS)

# make clean
out_clean:
	$(RM) -rf $(CURDIR)/out
			  
